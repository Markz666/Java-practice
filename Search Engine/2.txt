Access Control Mingxiang Zhao
The Internet of Things (IoT), also known as cyber-physical systems needs access controller for the devices to ensure security and privacy of the whole system. Albeit there is a multitude of available technologies and platforms for IoT, people often overlook the access control issues in it.
There are two important enablers for access control. The first one is identity management. In order to control access, we must be able to identify the individuals (users and devices) in a system. The other one is authentication. Authentication is the process of confirming one’s identity. It could improve the user’s login experience and expand the adoption of IoT.
Access control can help authorized users to access the data or devices in IoT. In the contemporary operating systems, access limitation/control is based on the user. For example, the regular user may only have the access to the files/resources they possess, whereas the super-user has wider access to the system resources. Additionally, the administrator (privileged user) has the absolute access to all the files/resources in the system. In the IoT, access control is needed to ensure that only trusted users can access the sensor data, update hardware driver and device software. For instance, some companies which sell temperature data to clients need the access control. They measure the temperature data by the smart device such as the thermometer, but they cannot sell the data arbitrarily for the sake of the users’ privacy. They ought to share/sell the sensitive data collected by IoT device selectively with qualified vendors to make a trade-off between predictive maintenance and protection of the sensitive data.   
Admittedly, access control in IoT faces huge challenges due to low bandwidth between IoT devices and the Internet, distributed nature of the system (it is difficult to manage and update access control policies embedded in device side), and reboot approach (which needs time to be built). These challenges indicate that standard authorization models, such as Distributed Groups, RBAC, ABAC must be analyzed in depth before applying them to the IoT.
Before we implement the access control, we should be aware of the following IoT security requirements. The first one is every component (user, device, application, process) in IoT must have a unique identity. Every entity in IoT should have a unique public/private key pair (P, S). The second one is all network communication must be encrypted and mutually authenticated, which means each end is convinced that the other end possesses the corresponding private key. The next one is all access to device capabilities must be authorized and auditable. We create an audit log to store the audit data. Each lock device can keep track of who accessed it and with what blessings. Blessings are certificate chains bound to the principal’s public key, each certificate has a Name, PublicKey, Caveats, and Signature.
However, the implementation of access control in IoT comprises two methods, which are distributed architecture and centralized architecture, respectively. The distributed architecture, also known as decentralized architecture. In a distributed architecture, we can see autonomous communication between smart devices without the need of a central hub. This architecture can help to enable some of the following capabilities: Peer-to-Peer Messaging, Decentralized Auditing, Distributed File Sharing. Nevertheless, there is a foundation in distributed architecture named Block Chain, which maintains trusted relationship among the nodes without a centralized authority. Namely, the block chain provides the building blocks to enable devices in the system to exchange data and perform tasks in an authorized and trusted manner. Distributed architecture allows a higher degree privacy for the users, but it makes complicated access control models such as Role Based Access Control and Attribute Based Access Control, which poses tremendous challenges to low-powered IoT devices.
On the other hand, centralized structure utilizes a central hub to provide a series of backend services to nodes (smart devices) in the IoT system. In this architecture, smart devices act as consumers of data while the central hub acts as provider/vendor of data. Similarly, there are some centralized capabilities in this structure. For instance, event processing, enterprise system integration, device discovery, device management, event notifications, real-time analytics. Cloud Foundry is the leading multi-cloud application development and deployment platform for centralized IoT. As a platform, Cloud Foundry supports the complete application development lifecycle, from initial development phase through all testing stages to deployment phase. However, there are some limitations in the Cloud Foundry. For example, we cannot disable access to a service plan for an organization if the plan is currently available to all organizations. If we want to disable access to such a plan, we must disable access for all organizations first, then we can enable access for a particular organization.
Role Based Access Control (RBAC) is an important access control model. Different users have different permissions as I have mentioned above. The main merit of RBAC is that granting rights/privileges to the users is easy. Because the rights of users are associated with their roles in the system. On the other hand, there is a big trouble in RBAC. In a titanic organization/system, it is absolutely complicated to manage sufficient roles and assign adequate role memberships without the hierarchical creation of roles and privilege assignments when using RBAC.
Another important access control model is Attribute Based Access Control(ABAC). In ABAC, each user has an access policy that describes user attributes, such as name, title, designation, etc. ABAC can increase the flexibility of the model. ABAC is policy-based in the sense that it utilizes policies rather than static permissions to define what is allowed or what is inhibited. Moreover, ABAC is considered “next generation” authorization model because it provides dynamic, context-aware and risk-intelligent (evaluate the risk intelligently) access control to resources. It increases the flexibility in the implementations of existing infrastructures.
In a nutshell, access control has almost become the backbone of system security in IoT. We cannot achieve security unless we have a mechanism like access control. Furthermore, it is beneficial to analyze access control implementations in IoT. We should choose appropriate access control model and implement it conscientiously. 
